package com.milagros;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.aaron.ProcessImage;
import com.asprise.ocr.Ocr;

import marvin.color.MarvinColorModelConverter;
import marvin.image.MarvinImage;
import marvin.io.MarvinImageIO;
import marvin.math.MarvinMath;
import net.sourceforge.tess4j.Tesseract;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.Point;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

import static marvin.MarvinPluginCollection.morphologicalClosing;

import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.event.ActionEvent;

/**
 *
 * @author Davniel
 */
public class Front extends javax.swing.JFrame {

  FileOutputStream salida;
  JFileChooser chooser = new JFileChooser();
  File file;
  Ocr instanceAs;
  Tesseract instance;
  /**
   * Creates new form Front
   */
  public Front() {
    applyProcessingBeforeOCR.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent arg0) {
      }
    });
    applyProcessingBeforeOCR.setLabel("Aplicar OCR");
    applyProcessingBeforeOCR.setForeground(Color.WHITE);
    applyProcessingBeforeOCR.setFont(new Font("Dialog", Font.PLAIN, 16));
    applyProcessingBeforeOCR.setBackground(new Color(102, 102, 255));
    applyProcessingBeforeOCR.setActionCommand("applyOCRButton");
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    instance = new Tesseract();
    instance.setDatapath("./lib/Tess4J");
    instance.setLanguage("spa");

    jPanel1 = new javax.swing.JPanel();
    jPanel2 = new javax.swing.JPanel();
    textArea1 = new java.awt.TextArea();
    saveImageButton = new java.awt.Button();
    saveTextButton = new java.awt.Button();
    jPanel3 = new javax.swing.JPanel();
    LoadImageButton = new java.awt.Button();
    applyOCRButton = new java.awt.Button();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Reconocimiento de Caracteres | ICR");
    setBackground(new java.awt.Color(255, 255, 255));

    jPanel1.setBackground(new java.awt.Color(255, 255, 255));

    jPanel2.setBackground(new java.awt.Color(255, 255, 255));

    textArea1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N

    saveImageButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    saveImageButton.setLabel("Guardar Imagen");
    saveImageButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        saveImageButtonActionPerformed(evt);
      }
    });

    saveTextButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    saveTextButton.setLabel("Guardar Texto");
    saveTextButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        saveTextButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(textArea1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addComponent(saveTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 375, Short.MAX_VALUE)
                    .addComponent(saveImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
        );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addGap(47, 47, 47)
            .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(saveImageButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(saveTextButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
        );

    jPanel3.setBackground(new java.awt.Color(255, 255, 255));

    LoadImageButton.setBackground(new java.awt.Color(102, 102, 255));
    LoadImageButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    LoadImageButton.setForeground(new java.awt.Color(255, 255, 255));
    LoadImageButton.setLabel("Cargar Imagen");
    LoadImageButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        LoadImageButtonActionPerformed(evt);
      }
    });

    applyOCRButton.setActionCommand("applyOCRButton");
    applyOCRButton.setBackground(new java.awt.Color(102, 102, 255));
    applyOCRButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
    applyOCRButton.setForeground(new java.awt.Color(255, 255, 255));
    applyOCRButton.setLabel("Aplicar OCR");
    applyOCRButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        applyOCRButtonActionPerformed(evt);
      }
    });

    jLabel2.setBackground(new java.awt.Color(204, 204, 204));
    jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    jLabel3.setBackground(new java.awt.Color(204, 204, 204));
    jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3Layout.setHorizontalGroup(
        jPanel3Layout.createParallelGroup(Alignment.LEADING)
        .addGroup(Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(21)
                    .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 447, GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(158)
                    .addComponent(LoadImageButton, GroupLayout.PREFERRED_SIZE, 138, GroupLayout.PREFERRED_SIZE)))
            .addPreferredGap(ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING, false)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(applyOCRButton, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGap(288))
                .addGroup(Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                    .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 447, GroupLayout.PREFERRED_SIZE)
                    .addContainerGap())))
        );
    jPanel3Layout.setVerticalGroup(
        jPanel3Layout.createParallelGroup(Alignment.TRAILING)
        .addGroup(jPanel3Layout.createSequentialGroup()
            .addContainerGap(20, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(Alignment.LEADING)
                .addComponent(jLabel2, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3, GroupLayout.PREFERRED_SIZE, 253, GroupLayout.PREFERRED_SIZE))
            .addGap(20)
            .addGroup(jPanel3Layout.createParallelGroup(Alignment.TRAILING)
                .addComponent(LoadImageButton, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)
                .addComponent(applyOCRButton, GroupLayout.PREFERRED_SIZE, 37, GroupLayout.PREFERRED_SIZE)))
        );
    jPanel3.setLayout(jPanel3Layout);

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGap(21, 21, 21)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(32, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(178, 178, 178))
        );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addGap(37, 37, 37)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(33, Short.MAX_VALUE))
        );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void saveImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveImageButtonActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_saveImageButtonActionPerformed

  private void saveTextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTextButtonActionPerformed
    if(chooser.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION){
      file=chooser.getSelectedFile();
      if(file.getName().endsWith("txt")){
        String Documento=textArea1.getText();
        String mensaje=saveFile(file,Documento);
        if(mensaje!=null){
          JOptionPane.showMessageDialog(null, mensaje);
        }
        else{
          JOptionPane.showMessageDialog(null, "Archivo no compatible");
        }
      }else{
        JOptionPane.showMessageDialog(null, "Guardar Documento de texto"); 
      }
    }
  }//GEN-LAST:event_saveTextButtonActionPerformed

  public String saveFile(File archivo, String document){
    String mensaje= null;
    try{
      salida= new FileOutputStream(archivo);
      byte[]bytxt=document.getBytes();
      salida.write(bytxt);
      mensaje="archivo guardado";
    }
    catch(Exception e){

    }
    return mensaje;
  }

  public ImageIcon ResizeImage(String filepath) {
    ImageIcon myImage = new ImageIcon(filepath);
    Image img = myImage.getImage();
    Image newImg = img.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon image = new ImageIcon(newImg);
    return image;
  }

  private void applyOCRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyOCRButtonActionPerformed
    try { 

      ProcessImage PI = new ProcessImage();
      System.loadLibrary( Core.NATIVE_LIBRARY_NAME );

      System.out.println("APLICANDO OCR");
      System.out.println(file.getAbsolutePath());

      Mat imageA = Imgcodecs.imread(file.getAbsolutePath(), Imgcodecs.IMREAD_GRAYSCALE);
      Imgproc.threshold(imageA, imageA, 255, 255, Imgproc.THRESH_OTSU);
      Imgproc.GaussianBlur(imageA, imageA, new Size(0, 0), 1);

      for(int i = 1; i < 10; i++){
        Imgproc.erode(imageA, imageA, new Mat());
        Imgproc.threshold(imageA, imageA, 0, 255, Imgproc.THRESH_OTSU);
        Imgproc.dilate(imageA, imageA, new Mat());
        Imgproc.threshold(imageA, imageA, 0, 255, Imgproc.THRESH_OTSU);
        //Imgproc.erode(srcImage, srcImage, new Mat());
      }
      
    //Binarizacion de imagen
      Mat element = Imgproc.getStructuringElement(Imgproc.CV_SHAPE_RECT, new Size(2 * 0 + 1, 2 * 0 + 1), new Point(0, 0));
      Imgproc.morphologyEx(imageA, imageA, Imgproc.MORPH_OPEN, element);      
      Imgproc.threshold(imageA, imageA, 0, 255, Imgproc.THRESH_OTSU);
      
      Imgcodecs.imwrite("temp.png", imageA);
      applyMorphologicalClosing("temp.png", "temp1.png");
      
      File finalImage = new File("temp1.png");
      
      String result = instance.doOCR(file);
      String resultproc = instance.doOCR(finalImage);
      System.out.println("RESULT OCR: "+result);
      System.out.println("RESULT OCR+Processing" + resultproc);
      result = result.replaceAll("(?m)^[ \t]*\r?\n", "");
      result = result.replaceAll("([\\n\\r]+\\s*)*$", "");
      String text=result;
      resultproc = resultproc.replaceAll("(?m)^[ \t]*\r?\n", "");
      resultproc = resultproc.replaceAll("([\\n\\r]+\\s*)*$", "");
      String textproc =resultproc;
      textArea1.setText("PROCESADO:\n\n"+textproc+"\n\nSOLAMENTE OCR:\n\n"+text);
      
      LoadImageButton.setLabel(finalImage.getAbsolutePath());
      jLabel2.setIcon(ResizeImage(finalImage.getAbsolutePath()));
      

    } catch (Exception e) {
      System.err.println(e.getMessage());
    }
  }//GEN-LAST:event_applyOCRButtonActionPerformed
  
  public static void applyMorphologicalClosing(String imagePath, String pathDestiny) {
    MarvinImage image = MarvinImageIO.loadImage(imagePath);
    image = MarvinColorModelConverter.rgbToBinary(image, 127);
    morphologicalClosing(image.clone(), image, MarvinMath.getTrueMatrix(35, 35));
    MarvinImageIO.saveImage(image, pathDestiny);
}

  private void applyProcessingAndOCRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyOCRButtonActionPerformed
    try { 
      System.out.println("APLICANDO OCR");
      System.out.println(file.getAbsolutePath());

      String result = instance.doOCR(file);
      System.out.println("RESULT: "+result);
      result = result.replaceAll("(?m)^[ \t]*\r?\n", "");
      result = result.replaceAll("([\\n\\r]+\\s*)*$", "");
      String text=result;
      textArea1.setText(text);

    } catch (Exception e) {
      System.err.println(e.getMessage());
    }
  }

  private void LoadImageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoadImageButtonActionPerformed
    //chooser.setCurrentDirectory(new File(new URI("C:/Users/JeysonGonzales/D));
    //FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "png");
    //chooser.addChoosableFileFilter(filter);
    chooser.showOpenDialog(null);
    file = chooser.getSelectedFile();
    String filepath = file.getAbsolutePath();
    LoadImageButton.setLabel(filepath);
    jLabel3.setIcon(ResizeImage(filepath));
  }//GEN-LAST:event_LoadImageButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Front().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private java.awt.Button LoadImageButton;
  private java.awt.Button applyOCRButton;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private java.awt.Button saveImageButton;
  private java.awt.Button saveTextButton;
  private java.awt.TextArea textArea1;
  /**
   * @wbp.nonvisual location=768,347
   */
  private final Button applyProcessingBeforeOCR = new Button();
  // End of variables declaration//GEN-END:variables
  public Button getApplyProcessingBeforeOCR() {
    return applyProcessingBeforeOCR;
  }
}
