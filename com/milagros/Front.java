package com.milagros;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Image;
import java.io.File;
import java.io.FileOutputStream;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

import com.aaron.ProcessImage;
import com.asprise.ocr.Ocr;

import marvin.color.MarvinColorModelConverter;
import marvin.image.MarvinImage;
import marvin.io.MarvinImageIO;
import marvin.math.MarvinMath;
import net.sourceforge.tess4j.Tesseract;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import org.opencv.core.Core;
import org.opencv.core.Mat;
import org.opencv.core.Point;
import org.opencv.core.Size;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

import static marvin.MarvinPluginCollection.morphologicalClosing;

import java.awt.Button;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.awt.event.ActionEvent;

/**
 *
 * @author Davniel
 */
public class Front extends javax.swing.JFrame {

  FileOutputStream salida;
  JFileChooser chooser = new JFileChooser();
  File file;
  Ocr instanceAs;
  Tesseract instance;
  /**
   * Creates new form Front
   */
  public Front() {
    applyProcessingBeforeOCR.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent arg0) {
      }
    });
    applyProcessingBeforeOCR.setLabel("Aplicar OCR");
    applyProcessingBeforeOCR.setForeground(Color.WHITE);
    applyProcessingBeforeOCR.setFont(new Font("Dialog", Font.PLAIN, 16));
    applyProcessingBeforeOCR.setBackground(new Color(102, 102, 255));
    applyProcessingBeforeOCR.setActionCommand("applyOCRButton");
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        textArea1 = new java.awt.TextArea();
        saveTextButton = new java.awt.Button();
        jPanel3 = new javax.swing.JPanel();
        uploadImageButton = new java.awt.Button();
        applyOCRButton = new java.awt.Button();
        repairedImageLabel = new javax.swing.JLabel();
        originalImageLabel = new javax.swing.JLabel();
        gaussianBlurButton = new java.awt.Button();
        grayScaleButton = new java.awt.Button();
        morphologicalClosingButton = new java.awt.Button();
        applyAllButton = new java.awt.Button();
        erodeAndDilateButton = new java.awt.Button();
        jLabel1 = new javax.swing.JLabel();
        gradeInputtext = new javax.swing.JTextField();
        binarizationButton = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reconocimiento de Caracteres | ICR");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        textArea1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        textArea1.setName("outputTextArea"); // NOI18N

        saveTextButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        saveTextButton.setLabel("Guardar Texto");
        saveTextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(133, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(saveTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(355, 355, 355))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(textArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveTextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        uploadImageButton.setBackground(new java.awt.Color(102, 102, 255));
        uploadImageButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        uploadImageButton.setForeground(new java.awt.Color(255, 255, 255));
        uploadImageButton.setLabel("Cargar Imagen");
        uploadImageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadImageActionPerformed(evt);
            }
        });

        applyOCRButton.setActionCommand("applyOCRActionPerformed");
        applyOCRButton.setBackground(new java.awt.Color(102, 102, 255));
        applyOCRButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        applyOCRButton.setForeground(new java.awt.Color(255, 255, 255));
        applyOCRButton.setLabel("Aplicar OCR");
        applyOCRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyOCRActionPerformed(evt);
            }
        });

        repairedImageLabel.setBackground(new java.awt.Color(204, 204, 204));
        repairedImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        repairedImageLabel.setName("repairedImageLabel"); // NOI18N

        originalImageLabel.setBackground(new java.awt.Color(204, 204, 204));
        originalImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        originalImageLabel.setName("deterioratedImage"); // NOI18N

        gaussianBlurButton.setBackground(new java.awt.Color(102, 102, 255));
        gaussianBlurButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        gaussianBlurButton.setForeground(new java.awt.Color(255, 255, 255));
        gaussianBlurButton.setLabel("Desenfoque gaussiano");
        gaussianBlurButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gaussianBlurActionPerformed(evt);
            }
        });

        grayScaleButton.setActionCommand("grayScaleActionPerformed");
        grayScaleButton.setBackground(new java.awt.Color(102, 102, 255));
        grayScaleButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        grayScaleButton.setForeground(new java.awt.Color(255, 255, 255));
        grayScaleButton.setLabel("Escala de grises");
        grayScaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                grayScaleActionPerformed(evt);
            }
        });

        morphologicalClosingButton.setBackground(new java.awt.Color(102, 102, 255));
        morphologicalClosingButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        morphologicalClosingButton.setForeground(new java.awt.Color(255, 255, 255));
        morphologicalClosingButton.setLabel("Cierre Morfológico");
        morphologicalClosingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                morphologicalClosingActionPerformed(evt);
            }
        });

        applyAllButton.setBackground(new java.awt.Color(102, 102, 255));
        applyAllButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        applyAllButton.setForeground(new java.awt.Color(255, 255, 255));
        applyAllButton.setLabel("Aplicar todos");
        applyAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyAllActionPerformed(evt);
            }
        });

        erodeAndDilateButton.setBackground(new java.awt.Color(102, 102, 255));
        erodeAndDilateButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        erodeAndDilateButton.setForeground(new java.awt.Color(255, 255, 255));
        erodeAndDilateButton.setLabel("Erosión y Dilación");
        erodeAndDilateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                erodeAndDilateActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Grado de cierre morfologico");

        gradeInputtext.setEditable(false);
        gradeInputtext.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        gradeInputtext.setName("gradeMorphological"); // NOI18N
        gradeInputtext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradeInputtextActionPerformed(evt);
            }
        });

        binarizationButton.setBackground(new java.awt.Color(102, 102, 255));
        binarizationButton.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        binarizationButton.setForeground(new java.awt.Color(255, 255, 255));
        binarizationButton.setLabel("Binarización");
        binarizationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                binarizationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(originalImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(uploadImageButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(applyAllButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(morphologicalClosingButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(erodeAndDilateButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gaussianBlurButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 215, Short.MAX_VALUE)
                                .addComponent(grayScaleButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(binarizationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addComponent(repairedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(applyOCRButton, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105))))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(gradeInputtext, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(409, 409, 409))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(grayScaleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gaussianBlurButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(erodeAndDilateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(binarizationButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(morphologicalClosingButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(applyAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(repairedImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(originalImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(applyOCRButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(uploadImageButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(gradeInputtext, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(178, 178, 178))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1076, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void saveTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTextActionPerformed
    if(chooser.showDialog(null, "Guardar")==JFileChooser.APPROVE_OPTION){
      file=chooser.getSelectedFile();
      if(file.getName().endsWith("txt")){
        String Documento=textArea1.getText();
        String mensaje=saveFile(file,Documento);
        if(mensaje!=null){
          JOptionPane.showMessageDialog(null, mensaje);
        }
        else{
          JOptionPane.showMessageDialog(null, "Archivo no compatible");
        }
      }else{
        JOptionPane.showMessageDialog(null, "Guardar Documento de texto"); 
      }
    }
  }//GEN-LAST:event_saveTextActionPerformed

  public String saveFile(File archivo, String document){
    String mensaje= null;
    try{
      salida= new FileOutputStream(archivo);
      byte[]bytxt=document.getBytes();
      salida.write(bytxt);
      mensaje="archivo guardado";
    }
    catch(Exception e){

    }
    return mensaje;
  }

  public ImageIcon ResizeImage(String filepath) {
    ImageIcon myImage = new ImageIcon(filepath);
    Image img = myImage.getImage();
    Image newImg = img.getScaledInstance(repairedImageLabel.getWidth(), repairedImageLabel.getHeight(), Image.SCALE_SMOOTH);
    ImageIcon image = new ImageIcon(newImg);
    return image;
  }

  private void applyOCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyOCRActionPerformed
    try { 

      ProcessImage PI = new ProcessImage();
      System.loadLibrary( Core.NATIVE_LIBRARY_NAME );

      System.out.println("APLICANDO OCR");
      System.out.println(file.getAbsolutePath());

      Mat imageA = Imgcodecs.imread(file.getAbsolutePath(), Imgcodecs.IMREAD_GRAYSCALE);
      Imgproc.threshold(imageA, imageA, 255, 255, Imgproc.THRESH_OTSU);
      Imgproc.GaussianBlur(imageA, imageA, new Size(0, 0), 1);

      for(int i = 1; i < 10; i++){
        Imgproc.erode(imageA, imageA, new Mat());
        Imgproc.threshold(imageA, imageA, 0, 255, Imgproc.THRESH_OTSU);
        Imgproc.dilate(imageA, imageA, new Mat());
        Imgproc.threshold(imageA, imageA, 0, 255, Imgproc.THRESH_OTSU);
        //Imgproc.erode(srcImage, srcImage, new Mat());
      }
      
    //Binarizacion de imagen
      Mat element = Imgproc.getStructuringElement(Imgproc.CV_SHAPE_RECT, new Size(2 * 0 + 1, 2 * 0 + 1), new Point(0, 0));
      Imgproc.morphologyEx(imageA, imageA, Imgproc.MORPH_OPEN, element);      
      Imgproc.threshold(imageA, imageA, 0, 255, Imgproc.THRESH_OTSU);
      
      Imgcodecs.imwrite("temp.png", imageA);
      applyMorphologicalClosing("temp.png", "temp1.png");
      
      File finalImage = new File("temp1.png");
      
      String result = instance.doOCR(file);
      String resultproc = instance.doOCR(finalImage);
      System.out.println("RESULT OCR: "+result);
      System.out.println("RESULT OCR+Processing" + resultproc);
      result = result.replaceAll("(?m)^[ \t]*\r?\n", "");
      result = result.replaceAll("([\\n\\r]+\\s*)*$", "");
      String text=result;
      resultproc = resultproc.replaceAll("(?m)^[ \t]*\r?\n", "");
      resultproc = resultproc.replaceAll("([\\n\\r]+\\s*)*$", "");
      String textproc =resultproc;
      textArea1.setText("PROCESADO:\n\n"+textproc+"\n\nSOLAMENTE OCR:\n\n"+text);
      
      uploadImageButton.setLabel(finalImage.getAbsolutePath());
      repairedImageLabel.setIcon(ResizeImage(finalImage.getAbsolutePath()));
      

    } catch (Exception e) {
      System.err.println(e.getMessage());
    }
  }//GEN-LAST:event_applyOCRActionPerformed
  
  public static void applyMorphologicalClosing(String imagePath, String pathDestiny) {
    MarvinImage image = MarvinImageIO.loadImage(imagePath);
    image = MarvinColorModelConverter.rgbToBinary(image, 127);
    morphologicalClosing(image.clone(), image, MarvinMath.getTrueMatrix(35, 35));
    MarvinImageIO.saveImage(image, pathDestiny);
}

  private void applyProcessingAndOCRButtonActionPerformed(java.awt.event.ActionEvent evt) {                                               
    try { 
      System.out.println("APLICANDO OCR");
      System.out.println(file.getAbsolutePath());

      String result = instance.doOCR(file);
      System.out.println("RESULT: "+result);
      result = result.replaceAll("(?m)^[ \t]*\r?\n", "");
      result = result.replaceAll("([\\n\\r]+\\s*)*$", "");
      String text=result;
      textArea1.setText(text);

    } catch (Exception e) {
      System.err.println(e.getMessage());
    }
  }

  private void uploadImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadImageActionPerformed
    //chooser.setCurrentDirectory(new File(new URI("C:/Users/JeysonGonzales/D));
    //FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images", "png");
    //chooser.addChoosableFileFilter(filter);
    chooser.showOpenDialog(null);
    file = chooser.getSelectedFile();
    String filepath = file.getAbsolutePath();
    uploadImageButton.setLabel(filepath);
    originalImageLabel.setIcon(ResizeImage(filepath));
  }//GEN-LAST:event_uploadImageActionPerformed

    private void gaussianBlurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gaussianBlurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gaussianBlurActionPerformed

    private void grayScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_grayScaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_grayScaleActionPerformed

    private void morphologicalClosingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_morphologicalClosingActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_morphologicalClosingActionPerformed

    private void applyAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyAllActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_applyAllActionPerformed

    private void erodeAndDilateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_erodeAndDilateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_erodeAndDilateActionPerformed

    private void gradeInputtextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradeInputtextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gradeInputtextActionPerformed

    private void binarizationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_binarizationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_binarizationActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
     * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(Front.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new Front().setVisible(true);
      }
    });
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button applyAllButton;
    private java.awt.Button applyOCRButton;
    private java.awt.Button binarizationButton;
    private java.awt.Button erodeAndDilateButton;
    private java.awt.Button gaussianBlurButton;
    private javax.swing.JTextField gradeInputtext;
    private java.awt.Button grayScaleButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private java.awt.Button morphologicalClosingButton;
    private javax.swing.JLabel originalImageLabel;
    private javax.swing.JLabel repairedImageLabel;
    private java.awt.Button saveTextButton;
    private java.awt.TextArea textArea1;
    private java.awt.Button uploadImageButton;
    // End of variables declaration//GEN-END:variables
  public Button getApplyProcessingBeforeOCR() {
    return applyProcessingBeforeOCR;
  }
}
